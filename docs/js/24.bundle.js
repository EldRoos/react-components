(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{1064:function(t,e){t.exports='<hr>\n<p>title: TextBox\ncomponentid: component-input\nvariantid: default\nguid: &quot;input-textbox-guid-default-component-react&quot;</p>\n<hr>\n<h2 id="element-name">Element name</h2>\n<pre><code class="language-javascript">Name: TextBox Component\nComponent: &quot;TextBox&quot;\nSelector: &quot;&lt;TextBox/&gt;&quot;\nImport: &quot;@sebgroup/react-components/dist/TextBox&quot;\nType: Form Component</code></pre>\n<h2 id="element-information">Element information</h2>\n<p>This React component is based on SEB Bootstrap style. Supports customization and configurations. The component name is <code>TextBox</code> and the selector is <code>&lt;TextBox/&gt;</code>.</p>\n<h2 id="basic-use">Basic use</h2>\n<pre><code class="language-html">&lt;TextBox name=&quot;textInput&quot; placeholder=&quot;Text Box placeholder&quot; value={this.state.textBox} onChange={(event) =&gt; {\nthis.setState({ textBoxValue: event.target.value }); }} /&gt;</code></pre>\n<h2 id="properties">Properties</h2>\n<p>These are the current available properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>autoComplete?</td>\n<td><code>on</code> or <code>off</code></td>\n<td>Enable autocomplete</td>\n</tr>\n<tr>\n<td>className?</td>\n<td><code>string</code></td>\n<td>Custom class</td>\n</tr>\n<tr>\n<td>disabled?</td>\n<td><code>boolean</code></td>\n<td>Disable input element. (default: <code>false</code>)</td>\n</tr>\n<tr>\n<td>error?</td>\n<td><code>string</code></td>\n<td>Error text</td>\n</tr>\n<tr>\n<td>focus?</td>\n<td><code>boolean</code></td>\n<td>Enable autofocus. (default: <code>false</code>)</td>\n</tr>\n<tr>\n<td>id?</td>\n<td><code>string</code></td>\n<td>Id string</td>\n</tr>\n<tr>\n<td>label?</td>\n<td><code>string</code></td>\n<td>The small label on top of the textbox</td>\n</tr>\n<tr>\n<td>maxLength?</td>\n<td><code>number</code></td>\n<td>Input max length</td>\n</tr>\n<tr>\n<td>minLength?</td>\n<td><code>number</code></td>\n<td>Input min length</td>\n</tr>\n<tr>\n<td>name</td>\n<td><code>string</code></td>\n<td>Name string</td>\n</tr>\n<tr>\n<td>onBlur?</td>\n<td><code>(event: React.FocusEvent&lt;HTMLInputElement&gt;) =&gt; void</code></td>\n<td>On <code>&#39;blur&#39;</code> event</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td><code>(event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void</code></td>\n<td>On <code>&#39;change&#39;</code> event</td>\n</tr>\n<tr>\n<td>onFocus?</td>\n<td><code>(event: React.FocusEvent&lt;HTMLInputElement&gt;) =&gt; void</code></td>\n<td>On <code>&#39;focus&#39;</code> event</td>\n</tr>\n<tr>\n<td>onKeyDown?</td>\n<td><code>(event: React.KeyboardEvent&lt;HTMLInputElement&gt;) =&gt; void</code></td>\n<td>On <code>&#39;keydown&#39;</code> event</td>\n</tr>\n<tr>\n<td>onKeyPress?</td>\n<td><code>(event: React.KeyboardEvent&lt;HTMLInputElement&gt;) =&gt; void</code></td>\n<td>On <code>&#39;keypress&#39;</code> event</td>\n</tr>\n<tr>\n<td>onKeyUp?</td>\n<td><code>(event: React.KeyboardEvent&lt;HTMLInputElement&gt;) =&gt; void</code></td>\n<td>On <code>&#39;keyup&#39;</code> event</td>\n</tr>\n<tr>\n<td>pattern?</td>\n<td><code>string</code></td>\n<td>Pattern string</td>\n</tr>\n<tr>\n<td>placeholder?</td>\n<td><code>string</code></td>\n<td>Placeholder text</td>\n</tr>\n<tr>\n<td>readOnly?</td>\n<td><code>boolean</code></td>\n<td>Make input element readonly. (default: <code>false</code>)</td>\n</tr>\n<tr>\n<td>reference?</td>\n<td><code>React.RefObject&lt;HTMLInputElement&gt;</code></td>\n<td>React Ref obj</td>\n</tr>\n<tr>\n<td>required?</td>\n<td><code>boolean</code></td>\n<td>Required atribute</td>\n</tr>\n<tr>\n<td>showErrorMessage?</td>\n<td><code>boolean</code></td>\n<td>Show or hide the error message<sup>1</sup>(default: <code>true</code>)</td>\n</tr>\n<tr>\n<td>success</td>\n<td><code>boolean</code></td>\n<td>Success status</td>\n</tr>\n<tr>\n<td>type?</td>\n<td><code>string</code></td>\n<td>Input type. (default: <code>&#39;text&#39;</code>)</td>\n</tr>\n<tr>\n<td>value</td>\n<td><code>string</code></td>\n<td>Value string</td>\n</tr>\n</tbody></table>\n<h2 id="footnote">Footnote</h2>\n<ol>\n<li>Showing or hiding the error message does not affect the <span style="color: red">red</span> border indicator for the property <code>error</code></li>\n</ol>\n'},174:function(t,e,n){"use strict";n.r(e);var o=n(0),d=n(624),r=n(444).default,a=n(1064);e.default=function(){var t=o.useState(""),e=t[0],n=t[1],c=o.useState("Not good"),l=c[0],s=c[1],i=o.useState("All good"),u=i[0],p=i[1];return o.createElement("div",{className:"route-template container"},o.createElement("div",{className:"info-holder"},o.createElement("div",{className:"info"},o.createElement("div",{className:"md-file"},o.createElement(r,{innerHTML:!0},a))),o.createElement("div",{className:"info"},o.createElement("h2",null,"Output"),o.createElement("p",null,"Here is the basic bootstrap one:"),o.createElement("div",{className:"result"},o.createElement(d.a,{name:"textInput",label:"Textbox label",placeholder:"Text Box PlaceHolder",value:e,onChange:function(t){return n(t.target.value)}})),o.createElement("p",null,"Here is the input with error:"),o.createElement("div",{className:"result"},o.createElement(d.a,{name:"textInput2",placeholder:"Text Box PlaceHolder",error:"error msg will be shown here",value:l,onChange:function(t){return s(t.target.value)}})),o.createElement("p",null,"Here is the input with success:"),o.createElement("div",{className:"result"},o.createElement(d.a,{name:"textInput3",placeholder:"Text Box PlaceHolder",value:u,success:!0,onChange:function(t){return p(t.target.value)}})))))}},624:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var o=n(0),d=(n(625),n(111)),r=function(t){var e=o.useState(null),n=e[0],r=e[1],a=o.useState(!0),c=a[0],l=a[1];return o.useEffect((function(){r(t.id?t.id:t.label?Object(d.a)("tbg-"):null)}),[t.id,t.label]),o.useEffect((function(){t.success?l(!1):!1===t.showErrorMessage?l(!1):l(!0)}),[t.showErrorMessage,t.success]),o.createElement("div",{className:"form-group input-box"+(t.className?" "+t.className:"")},o.createElement("div",{className:"input-field"+(t.success?" success":t.error?" has-error":"")},t.label&&o.createElement("label",{className:"custom-label",htmlFor:n},t.label),o.createElement("input",{id:n,name:t.name,type:t.type,pattern:t.pattern,required:t.required,minLength:t.minLength,maxLength:t.maxLength,value:String(t.value),onChange:t.onChange,onKeyDown:t.onKeyDown,onKeyUp:t.onKeyUp,onKeyPress:t.onKeyPress,onFocus:t.onFocus,onBlur:t.onBlur,placeholder:t.placeholder,className:"form-control",autoFocus:t.focus,autoComplete:t.autoComplete,readOnly:t.readOnly,disabled:t.disabled,ref:t.reference}),c&&o.createElement("div",{className:"alert alert-danger"},t.error)))}},625:function(t,e,n){var o=n(626);"string"==typeof o&&(o=[[t.i,o,""]]);var d={insert:"head",singleton:!1};n(58)(o,d);o.locals&&(t.exports=o.locals)},626:function(t,e,n){(t.exports=n(53)(!1)).push([t.i,".form-group.input-box>.input-field>input.form-control{color:#444;border:1px solid #adadad;-webkit-transition:border 100ms;-moz-transition:border 100ms;-o-transition:border 100ms;transition:border 100ms}.form-group.input-box>.input-field>input.form-control:not(:disabled):hover{border-color:#41B0EE;background-color:white}.form-group.input-box>.input-field>input.form-control:not(:disabled):focus{border-color:#007AC7;box-shadow:none;background-color:white}.form-group.input-box>.input-field>input.form-control:not(:disabled):focus:active{border-color:#007AC7;box-shadow:none;background-color:white}.form-group.input-box>.input-field>.alert{opacity:0;margin:0;padding:0;background:transparent;max-height:0;border:none;border-radius:0px;overflow:hidden;width:100%;-webkit-transition:opacity 200ms,padding 200ms,max-height 400ms;-moz-transition:opacity 200ms,padding 200ms,max-height 400ms;-o-transition:opacity 200ms,padding 200ms,max-height 400ms;transition:opacity 200ms,padding 200ms,max-height 400ms}.form-group.input-box>.input-field>.alert.alert-danger{color:#F03529}.form-group.input-box>.input-field.has-error>input.form-control:not(:disabled){border-bottom:2px inset #F03529}.form-group.input-box>.input-field.has-error>.alert{opacity:1;padding-top:2px;max-height:100px}.form-group.input-box>.input-field.success>input.form-control:not(:disabled){border-bottom:2px inset #60cd18}\n",""])}}]);